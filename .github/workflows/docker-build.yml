name: Build & Push Docker Images

on:
  push:
    paths:
      - '**'
  pull_request:
    paths:
      - '**'
  workflow_dispatch:

jobs:
  detect-and-build:
    runs-on: ubuntu-latest
    name: Detect Changed App Folders
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker login
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Detect App Folders
        id: detect
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Manual trigger - building all top-level app folders"
            folders=$(find . -maxdepth 1 -mindepth 1 -type d ! -name ".git" ! -name ".github" ! -name "." | sed 's|^\./||')
          else
            echo "Detecting changed top-level app folders"
            folders=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | cut -d '/' -f1 | sort -u)
          fi

          echo "Detected folders: $folders"

          json="["
          for f in $folders; do
            if [ -f "$f/Dockerfile" ]; then
              json="$json\"$f\","
            fi
          done
          json="${json%,}]"

          echo "Final JSON matrix: $json"
          echo "matrix=$json" >> $GITHUB_ENV

      - name: Set matrix output
        id: set-matrix
        run: |
          echo "${{ env.matrix }}"
          echo "matrix=${{ env.matrix }}" >> $GITHUB_OUTPUT

  build-and-push:
    needs: detect-and-build
    if: needs.detect-and-build.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-and-build.outputs.matrix) }}
    name: Build & Push - ${{ matrix.app }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker login
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}:${{ github.sha }} -f ${{ matrix.app }}/Dockerfile ${{ matrix.app }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}:${{ github.sha }}

          docker tag ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}:latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}:latest
